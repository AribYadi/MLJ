on:
  push:
    paths-ignore:
      - "**/*.md"
      - ".rustfmt.toml"
      - "rust-toolchain"
  pull_request:

name: CI

jobs:
  check:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      fail-fast: false
    name: Cargo Check on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y libasound2 libasound2-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y libasound2 libasound2-dev
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: llvm-tools-preview
      - uses: actions-rs/cargo@v1
        with:
          command: build
        env:
          RUSTFLAGS: "-Cinstrument-coverage"
      - uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          LLVM_PROFILE_FILE: "your_name-%p-%m.profraw"
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: --locked grcov
      - run: grcov . -s . --binary-path ./target/debug/ -t lcov --branch -o cov.txt
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: cov.txt
